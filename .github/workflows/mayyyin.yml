name: Build OBS Studio with Media Foundation on Windows

on:
  push:
    branches:
      - master
    tags:
      - '*'

permissions:
  contents: write

jobs:
  build:
    name: Build OBS Studio with Media Foundation
    runs-on: windows-latest
    strategy:
      matrix:
        configuration: [Release]

    steps:
    - name: Install Chocolatey
      shell: powershell
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force;
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12;
        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

    - name: Install dependencies using Chocolatey
      run: |
        choco install cmake --installargs '"ADD_CMAKE_TO_PATH=System"'
        choco install git --params "/GitAndUnixToolsOnPath /NoShellIntegration /NoAutoCrlf"
        choco install ninja
     
    - name: Install Windows SDK using PowerShell
      shell: powershell
      run: |
        $installerUrl = "https://go.microsoft.com/fwlink/?linkid=2120843"
        $installerPath = "$env:TEMP\winsdksetup.exe"
        Invoke-WebRequest -Uri $installerUrl -OutFile $installerPath
        Start-Process -FilePath $installerPath -ArgumentList "/quiet /norestart" -Wait
        $windowsSdkPath = "C:\Program Files (x86)\Windows Kits\10\bin\x64"
        [Environment]::SetEnvironmentVariable("Path", $env:Path + ";" + $windowsSdkPath, [EnvironmentVariableTarget]::Machine)
      

    - name: Set OBS Version and Replace DirectShow with Media Foundation
      run: |
           
           echo 'set(OBS_CMAKE_VERSION "3.0.0")' >> CMakeLists.txt
           # Make sure to list the correct path after 'cd' command
           Get-ChildItem -Path ./plugins -Recurse -Include *.cpp, *.c, *.h |
           ForEach-Object {
            (Get-Content $_.FullName) -replace 'DirectShow', 'MediaFoundation' | Set-Content $_.FullName
           }

    - name: Set up MSVC (Visual Studio 2019)
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    - name: Configure OBS Studio with Media Foundation support
      run: |
        cd obs-studio
        mkdir build
        cd build
        cmake -G "Ninja" -DCMAKE_BUILD_TYPE=${{ matrix.configuration }} -DENABLE_MEDIA_FOUNDATION=ON -DBUILD_WIN=ON ..

    - name: Build OBS Studio
      run: |
        cd obs-studio/build
        ninja

    - name: Archive build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: obs-build-${{ matrix.configuration }}
        path: obs-studio/build/bin/Release/
