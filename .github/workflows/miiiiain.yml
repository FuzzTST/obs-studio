name: Build OBS Studio with Media Foundation on Windows

on:
  push:
    branches:
      - master
    tags:
      - '*'

permissions:
  contents: write

jobs:
  build:
    name: Build OBS Studio with Media Foundation
    
    runs-on: windows-latest
    strategy:
      matrix:
        configuration: [Release]
    
    steps:
    - name: Checkout OBS Studio repository
      uses: actions/checkout@v2
      with:
        repository: obsproject/obs-studio
        path: obs-studio
        
    - name: Install necessary tools and SDK
      shell: powershell
      run: |
        # Install Chocolatey
        Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
        
        # Install Ninja build system
        choco install ninja -y
        
        # Download and install Windows SDK
        $installerUrl = "https://go.microsoft.com/fwlink/?linkid=2120843"
        $installerPath = "$env:TEMP\winsdksetup.exe"
        Invoke-WebRequest -Uri $installerUrl -OutFile $installerPath
        Start-Process -FilePath $installerPath -ArgumentList "/quiet /norestart" -Wait
        
        # Add Windows SDK to the system path
        $windowsSdkPath = "C:\Program Files (x86)\Windows Kits\10\bin\x64"
        [Environment]::SetEnvironmentVariable("Path", $env:Path + ";" + $windowsSdkPath, [EnvironmentVariableTarget]::Machine)
        
    - name: Checkout Media Foundation repository
      run: |
        git clone https://github.com/microsoft/media-foundation.git media-foundation
        cd media-foundation
        git submodule update --init --recursive
        
    - name: Set up CMake
      uses: jwlawson/actions-setup-cmake@v1
      with:
        cmake-version: '3.22.1'

    - name: Install dependencies (Visual Studio and other tools)
      run: |
        choco install visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --includeRecommended --includeOptional" -y

    - name: Configure OBS Studio submodules
      run: |
        cd D:\a\obs-studio\obs-studio\obs-studio
        git submodule update --init --recursive
        
    - name: Replace DirectShow with Media Foundation in OBS Studio codebase
      run: |
        # Replace DirectShow with Media Foundation in .cpp, .c, and .h files
        Get-ChildItem -Path D:\a\obs-studio\obs-studio\obs-studio -Recurse -Include *.cpp, *.c, *.h |
        ForEach-Object {
          (Get-Content $_.FullName) -replace 'DirectShow', 'MediaFoundation' | Set-Content $_.FullName
        }
        
    - name: Set OBS Version to prevent CMake errors
      run: |
        echo 'set(OBS_CMAKE_VERSION "3.0.0")' >> D:\a\obs-studio\obs-studio\obs-studio\CMakeLists.txt

    - name: Set up MSVC (Visual Studio 2019)
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    - name: Configure OBS Studio with Media Foundation support for Windows 64-bit
      run: |
        cd D:\a\obs-studio\obs-studio\obs-studio
        mkdir build
        cd build
        
        cmake -G "Ninja" -DCMAKE_BUILD_TYPE="Release" -DENABLE_MEDIA_FOUNDATION=ON -DBUILD_WIN=ON ..

    - name: Build OBS Studio
      run: |
        cd C:\a\obs-studio\build
        ninja

    - name: Archive build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: obs-build-${{ matrix.configuration }}
        path: C:\a\obs-studio\build\bin\Release\
        
